-----------------------------------------------------------
  Webservers 101
-----------------------------------------------------------

------------------------SERVERS----------------------------
[js]
const http = require('http');
const server = http.createServer((request, response) => {
  // magic happens here!
});
[/js]
-----------------------------------------------------------
[js]
const http = require('http');
const server = http.createServer();

server.on('request', (request, response) => {
  // the same kind of magic happens here!
});
[/js]
----------------------------------------------------------
- request: client/browser asking about what to do
- response: server responding with html/js
--------------------------------------------------------
    Request keys
-----------------------------------------------------------
 # request.method;
 # request.url;
 # request.end;
 # request.statuscode;
-----------------------------------------------------------
    Route variable
-----------------------------------------------------------

[js]
   let route = request.method + ' ' + request.url;
   let conditonal = 'Get /toronto/today'
   if (route === conditonal) {
    response.end(function {
   // magic happens here
      });
   };
[\js]
------------------------------------------------------------

---------------------Full Example-------------------------------


[js]
  let http = require('http');

const PORT = 8000;

let server = http.createServer(function (request, response){
  let route =  request.method + ' ' + request.url;
  console.log('Route: ', route);
  // switch (route) {
  //   case 'GET /toronto':
  //     response.end('It is mildly cold in Toronto today.');
  //     break;
  // }
  if (route === 'GET /toronto') {
    response.end('It is mildly cold in Toronto today.')
  } else if (route == 'GET /montreal') {
    response.end('We think it must be very cold in Montreal. Probably.')
  } else if (route  == 'GET /') {
    response.end(`
      <html>
      <body>
        <h1>Juan's meteorological service</h1>
        <p>Welcome and please select one of the following citiers:<p>
        <ul>
          <li><a href='/toronto'>Toronto</a></li>
          <li><a href='/montreal'>Montreal</a></li>
        </ul>
      </body>
      </html>`)
  } else {
    response.statusCode = 404;
    response.end('I have never been there...')
  }
});

server.listen(PORT, function (){
    console.log("Server listening on: http://localhost: ", PORT);
});
[\js]


-----------------------------------------------------------
    Express = express() and .ejs
-----------------------------------------------------------








--------------------Full Example--------------------------------------
[js]
const express = require('express');
const app = express();
const bodyParser = require('body-parser');
const db = require('./data');
const PORT = 8000;

app.set("view engine", "ejs");
app.use(express.static('public'))
app.use(bodyParser.urlencoded({ extended: true })); // for parsing application/x-www-form-urlencoded


app.use(function (req,res,next) {
  console.log(`Request: ${req.method} ${req.url}`);
  next()
})

app.get('/', function (req, res) {
  // res.send('Hello!')
  res.render('index')
});

app.get('/articles', function(req, res) {
  console.log('Params ',req.url)
  res.render('articles', { articles: db.all() , pi: 3.14159265})
})

app.get('/articles/:id', function(req, res) {
  res.render('one', {article: db.one(req.params.id)})
})

// html += '<form action="/articles" method="post"><input type="text" name="filter"><input type="submit" value="Filter"></form>'
app.post('/articles', function(req, res) {
  console.log('Filter... ',db.search(req.body.filter))
  res.render('articles', {articles: db.search(req.body.filter)})
})


app.listen(PORT, function () {
  console.log('Example app listening on port '+PORT)
})
[\js]

